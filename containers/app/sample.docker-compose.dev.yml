version: "3.7"

secrets:
  database_password:
    file: ./secrets/.database_password
  proxy_password:
    file: ./secrets/.proxy_password    

# See https://stackoverflow.com/questions/29261811/use-docker-compose-env-variable-in-dockerbuild-file
services:

  homer:
  #  secrets:
  #    - proxy_password
    build:
      context: ./homer
      dockerfile: Dockerfile.dev
      args: # from env_file
        UNIQUE_NAMESPACE: ${UNIQUE_NAMESPACE}
        IMAGE_REPOSITORY: ${IMAGE_REPOSITORY}
        IMAGE_REPOSITORY_SEPARATOR: ${IMAGE_REPOSITORY_SEPARATOR}
        PROXY_USER: ${PROXY_USER}
        PROXY_PASSWORD: ${PROXY_PASSWORD}
        PROXY_FQDN: ${PROXY_FQDN}
        PROXY_PORT: ${PROXY_PORT}
        NODE_ENV: development
    env_file:
      - .env
    container_name: ${UNIQUE_NAMESPACE}-homer-dev
    security_opt:
      - no-new-privileges:true
    privileged: true
    restart: unless-stopped     
    ports:
      - "8091:8080"
    volumes:
    #  - ./homer:/app
    #  - /app/node_modules
      - ./homer/config:/www/assets
    user: 1000:1000
    environment:
      - INIT_ASSETS=0
    #  - UID=1000
    #  - GID=1000
    #  - CHOKIDAR_USEPULLING=true
    #  - PROXY_PASSWORD='/run/secrets/proxy_password'
    depends_on:
     - "ifc"

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile.dev
      args: # from env_file
        UNIQUE_NAMESPACE: ${UNIQUE_NAMESPACE}
        IMAGE_REPOSITORY: ${IMAGE_REPOSITORY}
        IMAGE_REPOSITORY_SEPARATOR: ${IMAGE_REPOSITORY_SEPARATOR}
        PROXY_USER: ${PROXY_USER}
        PROXY_PASSWORD: ${PROXY_PASSWORD}
        PROXY_FQDN: ${PROXY_FQDN}
        PROXY_PORT: ${PROXY_PORT}    
    env_file:
      - .env
    container_name: ${UNIQUE_NAMESPACE}-nginx-dev
    extra_hosts:
      - "host.docker.internal:host-gateway"    
    security_opt:
      - no-new-privileges:true
    privileged: true  
    ports:
      - "8080:8080"
    depends_on:
      - "homer"

  proxy:
    build:
      context: ./proxy
      dockerfile: Dockerfile.dev
      args: # from env_file
        UNIQUE_NAMESPACE: ${UNIQUE_NAMESPACE}
        IMAGE_REPOSITORY: ${IMAGE_REPOSITORY}
        IMAGE_REPOSITORY_SEPARATOR: ${IMAGE_REPOSITORY_SEPARATOR}
        PROXY_USER: ${PROXY_USER}
        PROXY_PASSWORD: ${PROXY_PASSWORD}
        PROXY_FQDN: ${PROXY_FQDN}
        PROXY_PORT: ${PROXY_PORT}
        DISABLE_IPV6: ${DISABLE_IPV6}
    env_file:
      - .env     
    container_name: ${UNIQUE_NAMESPACE}-proxy-dev
    security_opt:
      - no-new-privileges:true
    privileged: true
    restart: unless-stopped
    ports:
      - "8080:80" # Public HTTP Port
      - "8081:81" # Admin Web Port
      - "8443:443" # Public HTTPS Port
    volumes:
      - ./data:/data
      - ./letsencrypt:/etc/letsencrypt

  mysql:
    build:
      context: ./mysql
      dockerfile: Dockerfile.dev
      args: # from env_file
        UNIQUE_NAMESPACE: ${UNIQUE_NAMESPACE}
        IMAGE_REPOSITORY: ${IMAGE_REPOSITORY}
        IMAGE_REPOSITORY_SEPARATOR: ${IMAGE_REPOSITORY_SEPARATOR}
        PROXY_USER: ${PROXY_USER}
        PROXY_PASSWORD: ${PROXY_PASSWORD}
        PROXY_FQDN: ${PROXY_FQDN}
        PROXY_PORT: ${PROXY_PORT}
        MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD_DEV}
        MYSQL_DATABASE: ${MYSQL_DATABASE_DEV}
        MYSQL_USER: ${MYSQL_USER_DEV}
        MYSQL_PASSWORD: ${MYSQL_PASSWORD_DEV}
    env_file:
      - .env     
    container_name: ${UNIQUE_NAMESPACE}-mysql-dev
    security_opt:
      - no-new-privileges:true
    privileged: true
    restart: unless-stopped
    ports:
      - "3305:3306"
    
  ifc:
    build:
      context: ./ifc
      dockerfile: Dockerfile.dev
      args: # from env_file
        UNIQUE_NAMESPACE: ${UNIQUE_NAMESPACE}
        IMAGE_REPOSITORY: ${IMAGE_REPOSITORY}
        IMAGE_REPOSITORY_SEPARATOR: ${IMAGE_REPOSITORY_SEPARATOR}
        PROXY_USER: ${PROXY_USER}
        PROXY_PASSWORD: ${PROXY_PASSWORD}
        PROXY_FQDN: ${PROXY_FQDN}
        PROXY_PORT: ${PROXY_PORT}
    env_file:
      - .env     
    container_name: ${UNIQUE_NAMESPACE}-ifc-dev
    security_opt:
      - no-new-privileges:true
    privileged: true
    restart: unless-stopped
    ports:
      - "6070:80"    

networks:
  proxy:
    external: true
